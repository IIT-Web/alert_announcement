<?php

/**
* @file
* Main file for the Alert Announcement module.
*/

/**
 * Implements hook_permission().
 */
function alert_announcement_permission() {
  return array(
    'administer alert_announcement' => array(
      'title' => t('Administer Alert Announcement module'),
      'description' => t('Perform administration tasks and configure Alert Announcement module.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_menu().
 */
function alert_announcement_menu() {
  $items['admin/config/administration/alert-announcement'] = array(
    'title' => 'Alert Announcement',
    'description' => 'Administer, enable, or disable the Alert Announcement module.',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('alert_announcement_config_form'),
    'access arguments' => array('administer alert_announcement'),
  );

  return $items;
}

/**
 * Form constructor for the Alert Announcement admin form.
 *
 * @see system_settings_form()
 *
 * @ingroup forms
 */
function alert_announcement_config_form($form, &$form_state) {
  $form = array();

  $form['description'] = array(
    '#markup' => t('<h3>Use this form to setup and enable an alert announcement.</h3>'),
  );

  $form['alert_announcement_active'] = array(
    '#type' => 'checkbox',
    '#title' => t('Check to enable the alert announcement.'),
    '#default_value' => variable_get('alert_announcement_active', FALSE),
  );

  // Text field for alert announcement message headline
  $form['alert_announcement_message_headline'] = array(
    '#type' => 'textfield',
    '#title' => t('Alert Announcement Message Headline'),
    '#size' => 100,
    '#description' => t('Headline for the alert announcement message.'),
    '#required' => TRUE,
    '#default_value' => variable_get('alert_announcement_message_headline', 'Default Message Headline'),
  );

  // Text field for alert announcement message subhead
  $form['alert_announcement_message_subhead'] = array(
    '#type' => 'textfield',
    '#title' => t('Alert Announcement Message Subhead'),
    '#size' => 100,
    '#description' => t('Subhead for the alert announcement message. Typically used for a short descripton of the type of issue.'),
    '#required' => FALSE,
    '#default_value' => variable_get('alert_announcement_message_subhead', ''),
  );

  // Radio buttons for alert announcement severity
  $message_severity = array(0 => t('Information'), 1 => t('Warning'), 2 => t('Danger'));
  $form['alert_announcement_severity'] = array(
    '#type' => 'radios',
    '#title' => t('Alert Announcement Severity'),
    '#description' => t('The selected option determines the styling of the alert announcement message.'),
    '#options' => $message_severity,
    '#default_value' => variable_get('alert_announcement_severity', 0),
    '#required' => TRUE,
  );

  // Load the text_format first to make things easier.
  $message_body = variable_get('alert_announcement_message_body', array('value' => 'Default Message Body', 'format' => NULL));

  // Text area with selectable text_format for alert announcement message body
  $form['alert_announcement_message_body'] = array(
    '#type' => 'text_format',
    '#title' => t('Alert Announcement Message Body'),
    '#description' => t('Body text for the alert announcement message.'),
    '#required' => TRUE,
    '#default_value' => $message_body['value'],
    '#format' => $message_body['format'],
  );

  $form = system_settings_form($form);
  $form['#submit'][] = 'alert_announcement_config_form_submit';
  return $form;
}

/**
 * Form submission handler for alert_announcement_config_form().
 *
 * @see alert_announcement_config_form()
 */
function alert_announcement_config_form_submit($form, &$form_state) {
  $message_key = drupal_random_key();
  variable_set('alert_announcement_message_key', $message_key);
}

/**
 * Implements hook_block_info().
 */
function alert_announcement_block_info() {
  $blocks['alert_announcement_message_block'] = array(
    'info' => t('Alert Announcement Message Block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function alert_announcement_block_view($delta = '') {
  $block = array();
  $path = drupal_get_path('module', 'alert_announcement');

  switch ($delta) {
    case 'alert_announcement_message_block':
      if (user_access('access content')) {
        $block['subject'] = NULL;
        $block['content'] = array(
          'alert_announcement_block' => array(
            '#theme' => 'alert_announcement_block',
            '#attached' => array(
              'js' => array(
                array(
                  'type' => 'file',
                  'data' => $path . '/js/alert-announcement.js',
                ),
              ),
            ),
          ),
        );
      }
      break;
  }

  return $block;
}

/**
 * Implements hook_theme().
 */
function alert_announcement_theme($existing, $type, $theme, $path) {
  return array(
    'alert_announcement_block' => array(
      'template' => 'templates/alert-announcement-block',
      'variables' => array(),
    ),
  );
}
